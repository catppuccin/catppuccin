/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Represents all maintainers and contributors to all ports.
 *
 * @minItems 1
 */
export type AllCollaborators = [
  {
    name?: DisplayName;
    url: GitHubProfile;
    [k: string]: unknown;
  },
  ...{
    name?: DisplayName;
    url: GitHubProfile;
    [k: string]: unknown;
  }[]
];
/**
 * The display name of the collaborator.
 */
export type DisplayName = string;
/**
 * The GitHub profile link of the collaborator.
 */
export type GitHubProfile = string;
/**
 * The name of the software the port is for.
 */
export type Name = string;
/**
 * The categories that fit the port the most, the first category is the primary category which the port will be listed under on the README.
 *
 * @minItems 1
 * @maxItems 3
 */
export type Categories = [Category] | [Category, Category] | [Category, Category, Category];
export type Category =
  | "3d_modelling"
  | "analytics"
  | "application_launcher"
  | "artificial_intelligence"
  | "boot_loader"
  | "browser"
  | "browser_extension"
  | "cli"
  | "code_editor"
  | "desktop_environment"
  | "development"
  | "discussion_forum"
  | "document_viewer"
  | "education"
  | "email_client"
  | "entertainment"
  | "file_manager"
  | "game"
  | "game_development"
  | "health_and_fitness"
  | "library"
  | "music"
  | "note_taking"
  | "notification_daemon"
  | "photo_and_video"
  | "productivity"
  | "search_engine"
  | "self_hosted"
  | "social_networking"
  | "system"
  | "terminal"
  | "translation_tool"
  | "userstyle"
  | "wiki"
  | "window_manager";
/**
 * The platforms the port supports. Either an array of supported operating systems or "agnostic" (indicating support for all platforms).
 */
export type Platform = OperatingSystems[] | "agnostic";
export type OperatingSystems = "android" | "ios" | "linux" | "macos" | "windows";
/**
 * The fill color for the icon on the Catppuccin website, which should match the color used by Simple Icons. If the icon does not exist in Simple Icons, choose the most suitable color from the branding.
 */
export type Color =
  | "rosewater"
  | "flamingo"
  | "pink"
  | "mauve"
  | "red"
  | "maroon"
  | "peach"
  | "yellow"
  | "green"
  | "teal"
  | "sky"
  | "sapphire"
  | "blue"
  | "lavender"
  | "text";
/**
 * The icon to use on the Catppuccin website. This should be the same name as the SVG file on https://simpleicons.org/. If a `.svg` suffix is present, it's taken from the local website repository resources.
 */
export type Icon = string;
/**
 * If another port provides the theme for this port, provide the name of the other port here (e.g. `vscode` for `azuredatastudio`, where Azure Data Studio uses the VS Code theme).
 */
export type Alias = string;
/**
 * If the port is hosted on a specific URL, provide it here.
 */
export type URL = string;
export type Name1 = string;
export type URL1 = string;
/**
 * Links to the port on marketplaces, app stores; documentation, preview pages, etc.
 */
export type Links = Link[];
/**
 * Boolean indicating whether the port has been upstreamed.
 */
export type Upstreamed = boolean;
/**
 * List of all active maintainers for this port.
 */
export type CurrentMaintainers = {
  name?: DisplayName;
  url: GitHubProfile;
  [k: string]: unknown;
}[];
/**
 * List of all maintainers that have previously maintained this port.
 *
 * @minItems 1
 */
export type PastMaintainers = [
  {
    name?: DisplayName;
    url: GitHubProfile;
    [k: string]: unknown;
  },
  ...{
    name?: DisplayName;
    url: GitHubProfile;
    [k: string]: unknown;
  }[]
];
/**
 * A short summary of why the port was archived.
 */
export type ArchiveReason = string;
export type Key =
  | "3d_modelling"
  | "analytics"
  | "application_launcher"
  | "artificial_intelligence"
  | "boot_loader"
  | "browser"
  | "browser_extension"
  | "cli"
  | "code_editor"
  | "desktop_environment"
  | "development"
  | "discussion_forum"
  | "document_viewer"
  | "education"
  | "email_client"
  | "entertainment"
  | "file_manager"
  | "game"
  | "game_development"
  | "health_and_fitness"
  | "library"
  | "music"
  | "note_taking"
  | "notification_daemon"
  | "photo_and_video"
  | "productivity"
  | "search_engine"
  | "self_hosted"
  | "social_networking"
  | "system"
  | "terminal"
  | "translation_tool"
  | "userstyle"
  | "wiki"
  | "window_manager";
export type Name2 = string;
export type Description = string;
export type Emoji = string;
/**
 * The categories listed in the README.
 */
export type CategoryDefinitions = CategoryItem[];
export type Title = string;
export type Link1 = string;
export type Link2 = string;
/**
 * Each showcase listed in the README
 */
export type Showcases = ShowcaseItem[];

export interface PortsSchema {
  collaborators?: AllCollaborators;
  ports?: Ports;
  archived?: ArchivedPorts;
  categories?: CategoryDefinitions;
  showcases?: Showcases;
}
/**
 * All ports in the Catppuccin organisation.
 */
export interface Ports {
  [k: string]: Port;
}
/**
 * The GitHub repository name of the port.
 *
 * This interface was referenced by `Ports`'s JSON-Schema definition
 * via the `patternProperty` "[A-Za-z0-9_\-]".
 */
export interface Port {
  name: Name;
  categories: Categories;
  platform: Platform;
  color: Color;
  icon?: Icon;
  alias?: Alias;
  url?: URL;
  links?: Links;
  upstreamed?: Upstreamed;
  "current-maintainers": CurrentMaintainers;
  "past-maintainers"?: PastMaintainers;
}
export interface Link {
  name: Name1;
  color?: Color;
  icon?: Icon;
  url: URL1;
}
/**
 * All archived ports in the Catppuccin organisation.
 */
export interface ArchivedPorts {
  [k: string]: Port1;
}
/**
 * The GitHub repository name of the archived port.
 *
 * This interface was referenced by `ArchivedPorts`'s JSON-Schema definition
 * via the `patternProperty` "[A-Za-z0-9_\-]".
 */
export interface Port1 {
  name: Name;
  reason: ArchiveReason;
  categories: Categories;
  platform: Platform;
  color: Color;
  icon?: Icon;
}
export interface CategoryItem {
  key: Key;
  name: Name2;
  description: Description;
  emoji: Emoji;
}
export interface ShowcaseItem {
  title: Title;
  link: Link1;
  description: Link2;
}
