/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Display name of the port.
 */
export type Name = string;
/**
 * Categories that the port belongs to.
 *
 * @minItems 1
 */
export type Categories = [Category, ...Category[]];
/**
 * Unique identifier for the category.
 */
export type CategoryKey =
  | "3d_modelling"
  | "analytics"
  | "application_launcher"
  | "artificial_intelligence"
  | "boot_loader"
  | "browser"
  | "browser_extension"
  | "cli"
  | "code_editor"
  | "desktop_environment"
  | "development"
  | "discussion_forum"
  | "document_viewer"
  | "documentation_generator"
  | "education"
  | "email_client"
  | "entertainment"
  | "file_manager"
  | "game"
  | "game_development"
  | "health_and_fitness"
  | "library"
  | "music"
  | "news_and_journalism"
  | "note_taking"
  | "notification_daemon"
  | "package_registry"
  | "photo_and_video"
  | "productivity"
  | "search_engine"
  | "social_networking"
  | "syntax_highlighting"
  | "system"
  | "terminal"
  | "translation_tool"
  | "userstyle"
  | "wiki"
  | "window_manager";
/**
 * Display name of the category.
 */
export type CategoryName = string;
/**
 * Detailed description of what the category is.
 */
export type CategoryDescription = string;
/**
 * Emoji representing the category.
 */
export type CategoryEmoji = string;
/**
 * The platforms the port supports. Either an array of supported operating systems or "agnostic" (indicating support for all platforms).
 */
export type Platform = [OperatingSystems, ...OperatingSystems[]] | ["agnostic"];
export type OperatingSystems = "android" | "ios" | "linux" | "macos" | "windows";
/**
 * The fill color for the icon on the Catppuccin website.
 */
export type Color =
  | "rosewater"
  | "flamingo"
  | "pink"
  | "mauve"
  | "red"
  | "maroon"
  | "peach"
  | "yellow"
  | "green"
  | "teal"
  | "sky"
  | "sapphire"
  | "blue"
  | "lavender"
  | "text";
/**
 * The icon to use on the Catppuccin website.
 */
export type Icon = string;
/**
 * Boolean indicating whether the port has been upstreamed.
 */
export type Upstreamed = boolean;
/**
 * Unique identifier for the port.
 */
export type Key = string;
/**
 * URL to the repository.
 */
export type RepositoryUrl = string;
/**
 * GitHub username of the collaborator.
 */
export type CollaboratorUsername = string;
/**
 * GitHub profile URL of the collaborator.
 */
export type CollaboratorUrl = string;
/**
 * List of all active maintainers for this port.
 */
export type RepositoryCurrentMaintainers = Collaborator[];
/**
 * List of all maintainers that have previously maintained this port.
 */
export type RepositoryPastMaintainers = Collaborator[];
export type LinkName = string;
export type LinkUrl = string;
/**
 * Links to the port on marketplaces, app stores, documentation, preview pages, etc.
 */
export type Links = Link[];
/**
 * All ports in the Catppuccin organisation.
 */
export type Ports = Port[];
/**
 * List of all collaborators across all Catppuccin ports.
 */
export type Collaborators = Collaborator[];
/**
 * Name of the project.
 */
export type ShowcaseTitle = string;
/**
 * Brief description of the project.
 */
export type ShowcaseDescription = string;
/**
 * URL of the project.
 */
export type ShowcaseLink = string;
/**
 * Featured projects using Catppuccin.
 */
export type Showcases = Showcase[];
/**
 * A short summary explaining why the port was archived.
 */
export type AchivedPortReason = string;
/**
 * All archived ports in the Catppuccin organisation.
 */
export type ArchivedPorts = ArchivedPort[];

export interface PortsPorcelainSchema {
  ports: Ports;
  collaborators: Collaborators;
  categories: Categories;
  showcases: Showcases;
  "archived-ports": ArchivedPorts;
}
export interface Port {
  name: Name;
  categories: Categories;
  platform: Platform;
  color: Color;
  icon?: Icon;
  upstreamed?: Upstreamed;
  key: Key;
  repository: Repository;
  links?: Links;
}
export interface Category {
  key: CategoryKey;
  name: CategoryName;
  description: CategoryDescription;
  emoji: CategoryEmoji;
}
/**
 * Repository information for the port.
 */
export interface Repository {
  name: Key;
  url: RepositoryUrl;
  "current-maintainers": RepositoryCurrentMaintainers;
  "past-maintainers": RepositoryPastMaintainers;
}
export interface Collaborator {
  username: CollaboratorUsername;
  url: CollaboratorUrl;
}
export interface Link {
  name: LinkName;
  color?: Color;
  icon?: Icon;
  url: LinkUrl;
}
export interface Showcase {
  title: ShowcaseTitle;
  description: ShowcaseDescription;
  link: ShowcaseLink;
}
export interface ArchivedPort {
  name: Name;
  categories: Categories;
  platform: Platform;
  color: Color;
  icon?: Icon;
  key: Key;
  repository: Repository;
  reason: AchivedPortReason;
}
